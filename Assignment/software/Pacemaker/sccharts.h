#ifndef SCCHARTS_H
#define SCCHARTS_H
/*
 * Automatically generated C code by
 * KIELER SCCharts - The Key to Efficient Modeling
 *
 * http://rtsys.informatik.uni-kiel.de/kieler
 */

#include "timing.h"


typedef struct {
  char AS;
  char VS;
  int AVI_Constraint;
  int PVARP_Constraint;
  int VRP_Constraint;
  int AEI_Constraint;
  int LRI_Constraint;
  int URI_Constraint;
  double _region0_AVI_cAVI;
  double _region1_PVARP_cPVARP;
  double _region2_VRP_cVRP;
  double _region3_AEI_cAEI;
  double _region4_LRI_cLRI;
  double _region5_URI_cURI;
  double deltaT;
  double sleepT;
  char AP;
  char VP;
  char AVI;
  char PVARP;
  char VRP;
  char AEI;
  char LRI;
  char URI;
  char _Pacemaker_local__Atrig;
  char _Pacemaker_local__Atrig1;
  char _Pacemaker_local__Atrig2;
  char _Pacemaker_local__Atrig3;
  char _Pacemaker_local__Atrig4;
  char _Pacemaker_local__Atrig5;
  char _Pacemaker_local__Atrig6;
  char _Pacemaker_local__Atrig7;
  char _Pacemaker_local__Atrig8;
  char _g4;
  char _g5;
  char _g8;
  char _g9;
  char _g11;
  char _g13;
  char _g14;
  char _g15;
  char _g16;
  char _g17;
  char _g19;
  char _g20;
  char _g23;
  char _g24;
  char _g25;
  char _g26;
  char _g27;
  char _g28;
  char _g29;
  char _g33;
  char _g34;
  char _g36;
  char _g37;
  char _g39;
  char _g41;
  char _g42;
  char _g43;
  char _g44;
  char _g45;
  char _g46;
  char _g47;
  char _g48;
  char _g51;
  char _g52;
  char _g53;
  char _g57;
  char _g58;
  char _g60;
  char _g61;
  char _g63;
  char _g65;
  char _g66;
  char _g67;
  char _g68;
  char _g69;
  char _g70;
  char _g71;
  char _g72;
  char _g75;
  char _g76;
  char _g77;
  char _g81;
  char _g82;
  char _g85;
  char _g86;
  char _g88;
  char _g90;
  char _g91;
  char _g92;
  char _g93;
  char _g94;
  char _g96;
  char _g97;
  char _g100;
  char _g101;
  char _g102;
  char _g103;
  char _g104;
  char _g105;
  char _g106;
  char _g110;
  char _g111;
  char _g114;
  char _g115;
  char _g117;
  char _g119;
  char _g120;
  char _g121;
  char _g122;
  char _g123;
  char _g125;
  char _g126;
  char _g129;
  char _g130;
  char _g131;
  char _g132;
  char _g133;
  char _g134;
  char _g135;
  char _g139;
  char _g140;
  char _g142;
  char _g143;
  char _g145;
  char _g147;
  char _g148;
  char _g149;
  char _g150;
  char _g151;
  char _g152;
  char _g153;
  char _g154;
  char _g157;
  char _g158;
  char _g167;
  char _g183;
  char _GO;
  char _cg28;
  char _cg4;
  char _cg6;
  char _cg8;
  char _cg10;
  char _cg11;
  char _cg15;
  char _cg14;
  char _cg17;
  char _cg20;
  char _cg26;
  char _cg23;
  char _cg33;
  char _cg36;
  char _cg41;
  char _cg42;
  char _cg46;
  char _cg51;
  char _cg57;
  char _cg60;
  char _cg65;
  char _cg66;
  char _cg70;
  char _cg75;
  char _cg105;
  char _cg81;
  char _cg83;
  char _cg85;
  char _cg87;
  char _cg88;
  char _cg92;
  char _cg91;
  char _cg94;
  char _cg97;
  char _cg103;
  char _cg100;
  char _cg110;
  char _cg134;
  char _cg112;
  char _cg114;
  char _cg116;
  char _cg117;
  char _cg121;
  char _cg120;
  char _cg123;
  char _cg126;
  char _cg132;
  char _cg129;
  char _cg139;
  char _cg142;
  char _cg147;
  char _cg148;
  char _cg152;
  char _cg157;
  char _g9_e1;
  char _g16_e2;
  char _g25_e3;
  char _g37_e1;
  char _g43_e2;
  char _g52_e3;
  char _g61_e1;
  char _g67_e2;
  char _g76_e3;
  char _g86_e1;
  char _g93_e2;
  char _g102_e3;
  char _g115_e1;
  char _g122_e2;
  char _g131_e3;
  char _g143_e1;
  char _g149_e2;
  char _g158_e3;
  char _TERM;
  char _pg93;
  char _pg126;
  char _pg143;
  char _pg8;
  char _pg4;
  char _pg28;
  char _pg131;
  char _pg67;
  char _pg158;
  char _pg106;
  char _pg105;
  char _pg77;
  char _pg86;
  char _pg149;
  char _pg42;
  char _pg92;
  char _pg53;
  char _pg134;
  char _pg143_e1;
  char _pg82;
  char _pg94;
  char _pg37;
  char _pg44;
  char _pg47;
  char _pg158_e3;
  char _pg70;
  char _pg76_e3;
  char _pg68;
  char _pg71;
  char _pg76;
  char _pg85;
  char _pg139;
  char _pg148;
  char _pg149_e2;
  char _pg150;
  char _pg153;
} TickData;

void reset(TickData* d);
void logic(TickData* d);
void tick(TickData* d);

#endif /* !PACEMAKER_H */
